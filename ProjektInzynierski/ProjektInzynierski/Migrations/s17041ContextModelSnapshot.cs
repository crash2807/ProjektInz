// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektInzynierski.Models;

namespace ProjektInzynierski.Migrations
{
    [DbContext(typeof(s17041Context))]
    partial class s17041ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjektInzynierski.Models.Event", b =>
                {
                    b.Property<int>("IdEvent");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("EventPlace")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("IdUser");

                    b.HasKey("IdEvent")
                        .HasName("Event_pk");

                    b.HasIndex("IdUser");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.EventRelation", b =>
                {
                    b.Property<int>("IdEventRelation");

                    b.Property<int>("IdEvent");

                    b.Property<int>("IdRelation");

                    b.HasKey("IdEventRelation")
                        .HasName("EventRelation_pk");

                    b.HasIndex("IdEvent");

                    b.HasIndex("IdRelation");

                    b.ToTable("EventRelation");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.ForumEvent", b =>
                {
                    b.Property<int>("IdEventRelation");

                    b.Property<int>("IdEvent");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("IdEventRelation", "IdEvent", "Date")
                        .HasName("Forum_Event_pk");

                    b.HasIndex("IdEvent");

                    b.ToTable("Forum_Event");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.Gift", b =>
                {
                    b.Property<int>("IdGift");

                    b.Property<string>("Brand")
                        .HasMaxLength(30);

                    b.Property<string>("Color")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Gift1")
                        .IsRequired()
                        .HasColumnName("Gift")
                        .HasMaxLength(64);

                    b.Property<int>("IdUser");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Size")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("IdGift")
                        .HasName("Gift_pk");

                    b.HasIndex("IdUser");

                    b.ToTable("Gift");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.GiftRelationEvent", b =>
                {
                    b.Property<int>("IdGift");

                    b.Property<int>("IdRelation");

                    b.Property<int>("IdEvent");

                    b.HasKey("IdGift", "IdRelation", "IdEvent")
                        .HasName("Gift_Relation_Event_pk");

                    b.HasIndex("IdEvent");

                    b.HasIndex("IdRelation");

                    b.ToTable("Gift_Relation_Event");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.Hobby", b =>
                {
                    b.Property<int>("IdHobby");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("HobbyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdHobby")
                        .HasName("Hobby_pk");

                    b.ToTable("Hobby");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.Relation", b =>
                {
                    b.Property<int>("IdRelation");

                    b.Property<int>("IdUser");

                    b.Property<int>("IdUser2")
                        .HasColumnName("IdUser_2");

                    b.HasKey("IdRelation")
                        .HasName("Relation_pk");

                    b.HasIndex("IdUser");

                    b.HasIndex("IdUser2");

                    b.ToTable("Relation");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("image");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("IdUser")
                        .HasName("User_pk");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.UserHobby", b =>
                {
                    b.Property<int>("IdUser");

                    b.Property<int>("IdHobby");

                    b.HasKey("IdUser", "IdHobby")
                        .HasName("User_Hobby_pk");

                    b.ToTable("User_Hobby");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.Event", b =>
                {
                    b.HasOne("ProjektInzynierski.Models.User", "IdUserNavigation")
                        .WithMany("Event")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("Okazja_Uzytkownik");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.EventRelation", b =>
                {
                    b.HasOne("ProjektInzynierski.Models.Event", "IdEventNavigation")
                        .WithMany("EventRelation")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("Table_5_Okazja");

                    b.HasOne("ProjektInzynierski.Models.Relation", "IdRelationNavigation")
                        .WithMany("EventRelation")
                        .HasForeignKey("IdRelation")
                        .HasConstraintName("OkazjaZnajomi_Znajomosc");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.ForumEvent", b =>
                {
                    b.HasOne("ProjektInzynierski.Models.Event", "IdEventNavigation")
                        .WithMany("ForumEvent")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("Wpis_Okazja");

                    b.HasOne("ProjektInzynierski.Models.EventRelation", "IdEventRelationNavigation")
                        .WithMany("ForumEvent")
                        .HasForeignKey("IdEventRelation")
                        .HasConstraintName("Wpis_OkazjaZnajomi");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.Gift", b =>
                {
                    b.HasOne("ProjektInzynierski.Models.User", "IdUserNavigation")
                        .WithMany("Gift")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("Prezent_Uzytkownik");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.GiftRelationEvent", b =>
                {
                    b.HasOne("ProjektInzynierski.Models.Event", "IdEventNavigation")
                        .WithMany("GiftRelationEvent")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("Table_9_Okazja");

                    b.HasOne("ProjektInzynierski.Models.Gift", "IdGiftNavigation")
                        .WithMany("GiftRelationEvent")
                        .HasForeignKey("IdGift")
                        .HasConstraintName("Table_9_Prezent");

                    b.HasOne("ProjektInzynierski.Models.Relation", "IdRelationNavigation")
                        .WithMany("GiftRelationEvent")
                        .HasForeignKey("IdRelation")
                        .HasConstraintName("Table_9_Znajomosc");
                });

            modelBuilder.Entity("ProjektInzynierski.Models.Relation", b =>
                {
                    b.HasOne("ProjektInzynierski.Models.User", "IdUserNavigation")
                        .WithMany("RelationIdUserNavigation")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("Znajomosc_Uzytkownik");

                    b.HasOne("ProjektInzynierski.Models.User", "IdUser2Navigation")
                        .WithMany("RelationIdUser2Navigation")
                        .HasForeignKey("IdUser2")
                        .HasConstraintName("Znajomosc_Uzytkownik_2");
                });
#pragma warning restore 612, 618
        }
    }
}
